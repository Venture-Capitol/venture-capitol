/**
 * Generated by orval v6.5.1 üç∫
 * Do not edit manually.
 * Venture Capitol API
 * Open API specification for the Venture Capitol API
 * OpenAPI spec version: 1.0.0
 */
import axios, { AxiosRequestConfig, AxiosResponse } from "axios";
import type {
	User,
	Company,
	CreateCompanyBody,
	CompletedTask,
	MadeDecision,
	MakeDecisionBody,
} from "./api.schemas";

/**
 * Returns a user with given id
 * @summary Get a user by id
 */
export const getUserById = <TData = AxiosResponse<User>>(
	userId: string,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.get(`/api/user/${userId}`, options);
};

/**
 * Posts a company with given data
 * @summary Adds a new company to Venture Capitol
 */
export const createCompany = <TData = AxiosResponse<Company>>(
	createCompanyBody: CreateCompanyBody,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.post(`/api/company`, createCompanyBody, options);
};

/**
 * Returns a company with given id
 * @summary Get a company by id
 */
export const getApiCompanyCompanyId = <TData = AxiosResponse<Company>>(
	companyId: string,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.get(`/api/company/${companyId}`, options);
};

/**
 * Deletes a company with given id
 * @summary Delete a company by id
 */
export const deleteCompany = <TData = AxiosResponse<void>>(
	companyId: string,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.delete(`/api/company/${companyId}`, options);
};

/**
 * Returns which tasks of a company are done
 * @summary Get all tasks of a company
 */
export const getDoneTasks = <TData = AxiosResponse<CompletedTask[]>>(
	companyId: string,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.get(`/api/company/${companyId}/tasks`, options);
};

/**
 * Adds a new finished task to a company
 * @summary Add a checked task to a company
 */
export const markTaskDone = <TData = AxiosResponse<void>>(
	companyId: string,
	taskId: string,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.post(
		`/api/company/${companyId}/tasks/${taskId}`,
		undefined,
		options
	);
};

/**
 * Deletes a task from a company
 * @summary Delete a task from a company
 */
export const undoTaskCompletion = <TData = AxiosResponse<void>>(
	companyId: string,
	taskId: string,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.delete(`/api/company/${companyId}/tasks/${taskId}`, options);
};

/**
 * Returns all decisions of a company
 * @summary Get all decisions of a company
 */
export const getMadeDecisions = <TData = AxiosResponse<MadeDecision[]>>(
	companyId: string,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.get(`/api/company/${companyId}/decisions`, options);
};

/**
 * Adds a new decision to a company
 * @summary Add a decision to a company
 */
export const makeDecision = <TData = AxiosResponse<void>>(
	companyId: string,
	decisionId: string,
	makeDecisionBody: MakeDecisionBody,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.post(
		`/api/company/${companyId}/decisions/${decisionId}`,
		makeDecisionBody,
		options
	);
};

/**
 * Deletes a decision from a company
 * @summary Delete a decision from a company
 */
export const undoDecision = <TData = AxiosResponse<void>>(
	companyId: string,
	decisionId: string,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.delete(
		`/api/company/${companyId}/decisions/${decisionId}`,
		options
	);
};
