/**
 * Generated by orval v6.5.1 üç∫
 * Do not edit manually.
 * Venture Capitol API
 * Open API specification for the Venture Capitol API
 * OpenAPI spec version: 1.0.0
 */
import type {
	PostFeedbackMessageBody,
	SendFeedbackLikeBody,
	SendFeedbackDislikeBody,
	User,
	Company,
	CreateCompanyBody,
	CompletedTask,
	MadeDecision,
	MakeDecisionBody,
} from "./api.schemas";
import { makeAxiosFn } from "./axios";

/**
 * Post message
 * @summary Post message
 */
export const postFeedbackMessage = <TData = void>(
	postFeedbackMessageBody: PostFeedbackMessageBody
) => {
	return makeAxiosFn<TData>({
		url: `/api/feedback/message`,
		method: "post",
		data: postFeedbackMessageBody,
	});
};

/**
 * Send feedback like
 * @summary Send feedback like
 */
export const sendFeedbackLike = <TData = void>(
	sendFeedbackLikeBody: SendFeedbackLikeBody
) => {
	return makeAxiosFn<TData>({
		url: `/api/feedback/like`,
		method: "post",
		data: sendFeedbackLikeBody,
	});
};

/**
 * Send feedback dislike
 * @summary Send feedback dislike
 */
export const sendFeedbackDislike = <TData = void>(
	sendFeedbackDislikeBody: SendFeedbackDislikeBody
) => {
	return makeAxiosFn<TData>({
		url: `/api/feedback/dislike`,
		method: "post",
		data: sendFeedbackDislikeBody,
	});
};

/**
 * Returns a user with given id
 * @summary Get a user by id
 */
export const getUserById = <TData = User>(userId: string) => {
	return makeAxiosFn<TData>({ url: `/api/user/${userId}`, method: "get" });
};

/**
 * Posts a company with given data
 * @summary Adds a new company to Venture Capitol
 */
export const createCompany = <TData = Company>(
	createCompanyBody: CreateCompanyBody
) => {
	return makeAxiosFn<TData>({
		url: `/api/company`,
		method: "post",
		data: createCompanyBody,
	});
};

/**
 * Returns a company with given id
 * @summary Get a company by id
 */
export const getApiCompanyCompanyId = <TData = Company>(companyId: string) => {
	return makeAxiosFn<TData>({
		url: `/api/company/${companyId}`,
		method: "get",
	});
};

/**
 * Deletes a company with given id
 * @summary Delete a company by id
 */
export const deleteCompany = <TData = void>(companyId: string) => {
	return makeAxiosFn<TData>({
		url: `/api/company/${companyId}`,
		method: "delete",
	});
};

/**
 * Returns which tasks of a company are done
 * @summary Get all tasks of a company
 */
export const getDoneTasks = <TData = CompletedTask[]>(companyId: string) => {
	return makeAxiosFn<TData>({
		url: `/api/company/${companyId}/tasks`,
		method: "get",
	});
};

/**
 * Adds a new finished task to a company
 * @summary Add a checked task to a company
 */
export const markTaskDone = <TData = void>(
	companyId: string,
	taskId: string
) => {
	return makeAxiosFn<TData>({
		url: `/api/company/${companyId}/tasks/${taskId}`,
		method: "post",
	});
};

/**
 * Deletes a task from a company
 * @summary Delete a task from a company
 */
export const undoTaskCompletion = <TData = void>(
	companyId: string,
	taskId: string
) => {
	return makeAxiosFn<TData>({
		url: `/api/company/${companyId}/tasks/${taskId}`,
		method: "delete",
	});
};

/**
 * Returns all decisions of a company
 * @summary Get all decisions of a company
 */
export const getMadeDecisions = <TData = MadeDecision[]>(companyId: string) => {
	return makeAxiosFn<TData>({
		url: `/api/company/${companyId}/decisions`,
		method: "get",
	});
};

/**
 * Adds a new decision to a company
 * @summary Add a decision to a company
 */
export const makeDecision = <TData = void>(
	companyId: string,
	decisionId: string,
	makeDecisionBody: MakeDecisionBody
) => {
	return makeAxiosFn<TData>({
		url: `/api/company/${companyId}/decisions/${decisionId}`,
		method: "post",
		data: makeDecisionBody,
	});
};

/**
 * Deletes a decision from a company
 * @summary Delete a decision from a company
 */
export const undoDecision = <TData = void>(
	companyId: string,
	decisionId: string
) => {
	return makeAxiosFn<TData>({
		url: `/api/company/${companyId}/decisions/${decisionId}`,
		method: "delete",
	});
};
