openapi: 3.0.2
info:
  version: 1.0.1
  title: Unternehmensregister
  description: API für das Unternehmensregister im Semesterprojekt.
servers:
  - url: https://api.example.com
tags:
  - name: Suche
    description: Endpunkte, die für die Suche zuständig sind.
  - name: Entries
    description: Endpunkte, die sich um die Eintraege im Register drehen.
components:
  securitySchemes:
    firebaseAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Entry:
      title: Ein Eintrag im Register als json.
      type: object
      properties:
        job:
          type: string
          description: Der Job, welchen der Eintrag ausführt.
          example: Webentwickler
        company:
          type: string
          description: Der Name des Eintrags.
          example: VentureWeb
        address:
          type: string
          description: Formatierte Adresse mit Straße, Straßennummer, PLZ und Ort.
          example: Luxemburger Str. 10, 15193 Berlin, Deutschland
        email:
          type: string
          description: Die Email-Adresse unter der der Eintrag erreichbar ist.
          example: example@ventureweb.de
        telefon:
          type: string
          nullable: true
          description: Die Telefonnummer unter der der Eintrag erreichbar ist.
          example: 12345678
        website:
          type: string
          nullable: true
          description: Die Webseite des Eintrags.
          example: https://www.ventureweb.com
        description:
          type: string
          nullable: true
          description: Beschreibung des Eintrages und seiner Dienstleistungen.
          example: VentureWeb hilft dir bei allen Angelegenheiten rund um die Unternehmensgründung.
    EntryResponse:
      title: Ein Eintrag, welcher in json zurückgegeben wird.
      type: object
      allOf:
        - type: object
          properties:
            id:
              type: number
              description: Die ID des Eintrages.
              example: 1
            verified:
              type: boolean
              description: Der Status, ob der Eintrag verifiziert ist oder nicht.
              example: true
          required:
            - id
            - job
            - company
            - address
            - email
            - verified
        - $ref: "#/components/schemas/Entry"
paths:
  /entry/search:
    get:
      tags:
        - Suche
      summary: Gibt alle Eintraege zurück, die den Job machen.
      description: Aus der Datenbank werden alle Eintraege rausgesucht, welche den gesuchten Job eingetragen haben und verifiziert sind. Je nach angegebenen Parametern, werden diese dann gefiltert und diese Teilmenge zurückgegeben.
      parameters:
        - in: query
          name: jobname
          schema:
            type: string
          required: true
          description: Name des Jobs, nach dem der Nutzer sucht.
        - in: query
          name: latitude
          schema:
            type: number
          required: false
          description: Latitude-Koordinate des Nutzers
        - in: query
          name: longitude
          schema:
            type: number
          required: false
          description: Longitude-Koordinate des Nutzers
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: number
                      description: Die ID des Eintrags.
                      example: 1
                    company:
                      type: string
                      description: Der Name des Eintrags.
                      example: VentureWeb
                    job:
                      type: string
                      description: Der Job, welchen der Eintrag ausführt.
                      example: Webagentur
                    address:
                      type: string
                      description: Formatierte Adresse mit Straße, Straßennummer, PLZ und Ort.
                      example: Luxemburger Str. 10, 15193 Berlin, Deutschland
                    distance:
                      type: number
                      description: Entfernung des Eintrags zum angegebenem Wohnort in Kilometern.
                      example: 11.1
                    description:
                      type: string
                      description: Beschreibung des Eintrages und seiner Dienstleistungen.
                      example: VentureWeb hilft dir bei allen Angelegenheiten rund um die Unternehmensgründung.
                  required:
                    - id
                    - company
                    - job
                    - address
                    - distance
        400:
          description: Die Anfrage war Fehlerhaft. Jobname muss ein String, Latitude und Longitude müssen number sein.
        404:
          description: Es wurden keine Einträge gefunden die diesen Job machen
        default:
          description: Es sind unerwartete Probleme bei der Suche aufgetreten.
  /entry:
    get:
      tags:
        - Entries
      summary: Gibt alle Eintraege zurück.
      description: Aus der Datenbank werden alle Eintraege rausgesucht. Wenn der verified Parameter gesetzt wurde, werden die Daten entsprechend gefiltert und diese Teilmenge zurückgegeben. Durch den amount und page parameter wird diese Teilmenge erneut gefiltert. Damit der page Parameter Auswirkung hat, muss auch der amount Parameter gesetzt sein. Ist amount gesetzt, aber page nicht, dann wird die erste Seite zurückgegeben. Wenn dies nicht der Fall ist, werden alle Eintraege zurückgegeben.
      security:
        - firebaseAuth: []
      parameters:
        - in: query
          name: verified
          schema:
            type: boolean
          required: false
          description: Angabe, ob die Eintraege verifiziert sein sollen oder nicht.
        - in: query
          name: amount
          schema:
            type: number
          required: false
          description: Angabe, wie viele Eintraege zurückgegeben werden sollen.
        - in: query
          name: page
          schema:
            type: number
          required: false
          description: Angabe, die wievielte Seite (mit jeweils so vielen Elementen wie amount) zurückgegeben werden soll.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntryResponse"
        400:
          description: Die Anfrage war Fehlerhaft. Der Parameter verified muss undefined oder boolean sein. page und amount number oder undefined.
        401:
          description: Die Autorisierungsinformationen fehlen oder sind fehlerhaft.
        403:
          description: Der anfragende Nutzer hat nicht genug Rechte um diese Anfrage auszuführen.
        default:
          description: Es ist ein unerwarteter Fehler aufgetreten.
    post:
      tags:
        - Entries
      summary: Erstellt einen Eintrag im Unternehmensregister.
      description: In der Datenbank wird ein Eintrag erstellt mit den Werten, die mitgeliefert werden im requestBody. Je nach Rechten des Nutzers wird der Eintrag direkt verifiziert oder nicht.
      security:
        - {}
        - firebaseAuth: []
      requestBody:
        description: Werte des zu erstellenden Eintrags in json.
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Entry"
                - type: object
                  required:
                    - job
                    - address
                    - company
                    - email
      responses:
        200:
          description: Success
        400:
          description: Die Anfrage war Fehlerhaft. Die Parameter company, email, adress & job im requestBody müssen Werte enthalten.
        default:
          description: Es ist ein unerwarteter Fehler aufgetreten.
  /entry/{id}:
    get:
      tags:
        - Entries
      summary: Gibt einen Eintrag zurück.
      description: Gibt genau den Eintrag zurück, welcher zu der id gehört, die als Parameter angegeben wurde.
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description: Die id des Eintrags, welches zurückgegeben werden soll.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntryResponse"
        400:
          description: Die Anfrage war Fehlerhaft. Der Parameter id muss eine number enthalten.
        404:
          description: Fuer die angegebene id konnte kein Eintrag gefunden werden.
        default:
          description: Es ist ein unerwarteter Fehler aufgetreten.
    put:
      tags:
        - Entries
      summary: Editiert einen Eintrag.
      description: Ändert die im requestBody angegebenen Werte beim Eintrag, dessen id als Parameter angegeben wurde, in der Datenbank. Die anderen Werte bleiben unverändert.
      security:
        - firebaseAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description: Die id des Eintrages, welcher abgeändert werden soll.
      requestBody:
        description: Werte welche beim Eintrag verändert werden sollen in json.
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    verified:
                      type: boolean
                      description: Der Status, ob der Eintrag verifiziert ist oder nicht.
                - $ref: "#/components/schemas/Entry"
      responses:
        200:
          description: Success
        400:
          description: Die Anfrage war Fehlerhaft. Der Parameter id muss eine number enthalten und es muss ein requestBody vorhanden sein.
        401:
          description: Die Autorisierungsinformationen fehlen oder sind fehlerhaft.
        403:
          description: Der anfragende Nutzer hat nicht genug Rechte um diese Anfrage auszuführen.
        404:
          description: Es existiert kein Eintrag mit dieser id.
        default:
          description: Es ist ein unerwarteter Fehler aufgetreten.
    delete:
      tags:
        - Entries
      summary: Löscht einen Eintrag.
      description: Löscht den Eintrages aus der Datenbank, dessen id angegeben wurde.
      security:
        - firebaseAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          description: Die id des Eintrags, welcher gelöscht werden soll.
      responses:
        200:
          description: Success
        400:
          description: Die Anfrage war Fehlerhaft. Der Parameter id muss eine number enthalten.
        401:
          description: Die Autorisierungsinformationen fehlen oder sind fehlerhaft.
        403:
          description: Der anfragende Nutzer hat nicht genug Rechte um diese Anfrage auszuführen.
        404:
          description: Es existiert kein Eintrag mit dieser id.
        default:
          description: Es ist ein unerwarteter Fehler aufgetreten.
